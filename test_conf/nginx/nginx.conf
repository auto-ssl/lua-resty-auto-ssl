worker_processes 1;
#daemon off;
#error_log /dev/stdout warn;
error_log  logs/error.log info;

events {
  worker_connections 32;
}

http {
  #lua_code_cache off;
  #lua_package_cpath "/usr/lib64/lua/5.1/?.so;/usr/lib64/lua/5.1/geoip/?.so;/usr/lib/lua/5.1/?.so;/usr/lib/lua/5.1/geoip/?.so;;";
  #lua_package_path "/usr/share/lua/5.1/?.lua;./?.lua;/usr/lib64/lua/5.1/?.lua;;";
  lua_package_path "/tmp/resty-auto-ssl-server-luarocks/share/lua/5.1/?.lua;/tmp/resty-auto-ssl-server-luarocks/share/lua/5.1/?/init.lua;;";
  lua_package_cpath "/tmp/resty-auto-ssl-server-luarocks/lib/lua/5.1/?.so;;";

  #lua_package_path "/usr/lib64/lua/5.1/?.so;/usr/lib64/lua/5.1/geoip/?.so;/usr/lib/lua/5.1/?.so;/usr/lib/lua/5.1/geoip/?.so;/tmp/resty-auto-ssl-server-luarocks/share/lua/5.1/?.lua;/tmp/resty-auto-ssl-server-luarocks/share/lua/5.1/?/init.lua;;";
  #lua_package_cpath "/usr/share/lua/5.1/?.lua;./?.lua;/usr/lib64/lua/5.1/?.lua;/tmp/resty-auto-ssl-server-luarocks/lib/lua/5.1/?.so;;";

  lua_shared_dict auto_ssl 1m;
  lua_shared_dict auto_ssl_settings 64k;
  resolver 8.8.8.8 ipv6=off;

  init_by_lua_block {
    auto_ssl = (require "resty.auto-ssl").new()
    auto_ssl:set("allow_domain", function(domain)
      return domain:find("openresty", 1, true) == 1
    end)
    auto_ssl:set("renew_check_interval", 60)
    auto_ssl:set("storage_adapter", "resty.auto-ssl.storage_adapters.redis")
    --auto_ssl:set("storage_adapter", "resty.auto-ssl.storage_adapters.file")
    auto_ssl:set("zerossl_ca", "https://acme.zerossl.com/v2/DV90")
    auto_ssl:set("letsencrypt_ca", "https://acme-staging-v02.api.letsencrypt.org/directory")
    --auto_ssl:set("ssl_provider", {["zerossl"]="resty.auto-ssl.ssl_providers.zero_ssl", ["letsencrypt"]="resty.auto-ssl.ssl_providers.lets_encrypt"})
    auto_ssl:set("ssl_provider", {["letsencrypt"]="resty.auto-ssl.ssl_providers.lets_encrypt",["zerossl"]="resty.auto-ssl.ssl_providers.zero_ssl"})
    auto_ssl:init()
  }

  init_worker_by_lua_block {
    auto_ssl:init_worker()
  }

  server {
    listen 443 ssl;
    ssl_certificate_by_lua_block {
      --auto_ssl:ssl_certificate({ generate_certs = false})
      auto_ssl:ssl_certificate()
    }
    ssl_certificate /usr/local/openresty/nginx/conf/resty-auto-ssl-fallback.crt;
    ssl_certificate_key /usr/local/openresty/nginx/conf/resty-auto-ssl-fallback.key;
  }

  server {
    listen 80;
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }
    location / {
      root   /usr/local/openresty/nginx/html;
      index  index.html index.htm;
    }

  }

  server {
    listen 127.0.0.1:8999;
    client_body_buffer_size 128k;
    client_max_body_size 128k;

    location / {
      content_by_lua_block {
        auto_ssl:hook_server()
      }
    }
  }
}
